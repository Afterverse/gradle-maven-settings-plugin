plugins {
    id 'net.researchgate.release' version "$releasePluginVersion"
    id 'groovy-gradle-plugin'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    implementation "org.apache.maven:maven-settings:$mavenVersion"
    implementation "org.apache.maven:maven-settings-builder:$mavenVersion"
    implementation "org.apache.maven:maven-model-builder:$mavenVersion"
    implementation "org.apache.maven:maven-model:$mavenVersion"
    implementation "org.apache.maven:maven-core:$mavenVersion"

    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
}

test {
    useJUnitPlatform()
}

gradlePlugin {
    plugins {
        create("mavenSettings") {
            id = "com.afterverse.maven-settings"
            displayName = "Maven Settings Plugin"
            implementationClass = "com.afterverse.maven.settings.MavenSettingsPlugin"
        }
    }
}

release {
    tagCommitMessage = "Setting version to "
    newVersionCommitMessage = "Setting version to "
    preTagCommitMessage = "Setting version to "
    failOnUpdateNeeded = true

    git {
        requireBranch = "main"
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    repositories {
        maven {
            url 'https://nexus.aftvrsys.com/repositories/kotlin-gradle-maven-settings-plugin/'

            credentials {
                username = System.getenv("AFTERVERSE_NEXUS_USERNAME")
                password = System.getenv("AFTERVERSE_NEXUS_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}


project.ext.set("release.useAutomaticVersion", "true")
afterReleaseBuild.dependsOn publish
